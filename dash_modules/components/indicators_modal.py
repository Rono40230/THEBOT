"""
üîÑ MODAL INDICATORS - Point d'entr√©e Migration Progressive
=========================================================

Point d'entr√©e compatible pour migration progressive vers le nouveau syst√®me modulaire.
Remplace progressivement l'ancien monolithe par l'architecture modulaire v2.0.
"""

import dash
from dash import html, dcc, Input, Output, State, callback_context
import dash_bootstrap_components as dbc
from typing import Dict, Any, Optional
from dash_modules.core.style_trading import trading_style_manager

# Import du nouveau syst√®me modulaire
from .modal_adapter import modal_adapter, MODAL_CSS


class IndicatorsModal:
    """Modal pour configurer tous les indicateurs techniques - Version Modulaire v2.0"""
    
    def __init__(self):
        self.modal_id = "indicators-modal"
        # Utiliser le nouveau syst√®me modulaire via l'adaptateur
        self.adapter = modal_adapter
        self.indicators_config = self.adapter.get_current_config()
    
    def create_modal(self) -> html.Div:
        """Cr√©er la modal avec le nouveau syst√®me modulaire"""
        return self.adapter.create_modal()
    
    def get_custom_css(self) -> str:
        """Retourner le CSS personnalis√© pour la modal"""
        return MODAL_CSS


def register_indicators_modal_callbacks(app):
    """
    üîÑ CALLBACKS MODAL INDICATEURS - Migration vers le Nouveau Syst√®me
    ================================================================
    
    Cette fonction utilise maintenant le nouveau syst√®me modulaire v2.0
    au lieu de l'ancien syst√®me monolithique.
    
    Les callbacks sont maintenant g√©r√©s par:
    - modal_manager.py (gestionnaire principal)
    - modal_adapter.py (interface d'adaptation)
    - basic_indicators.py et advanced_indicators.py (modules sp√©cialis√©s)
    """
    print("‚úÖ Callbacks Modal Indicateurs enregistr√©s (nouveau syst√®me)")
    
    # Import et activation du nouveau syst√®me modulaire
    try:
        from .modal_adapter import modal_adapter
        # Les callbacks du nouveau syst√®me sont automatiquement enregistr√©s
        # via le modal_adapter qui utilise le modal_manager
        print("üîÑ Nouveau syst√®me modulaire activ√©")
        
    except ImportError as e:
        print(f"‚ö†Ô∏è Erreur import nouveau syst√®me: {e}")


# Instance globale de la modal
indicators_modal = IndicatorsModal()

# Store pour sauvegarder la configuration des indicateurs
indicators_store = dcc.Store(id='indicators-config-store', data=indicators_modal.indicators_config)